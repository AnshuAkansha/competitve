number insertions needed to make a string palindrome
#include<bits/stdc++.h>
using namespace std;

//recursive function
int findMinIsertions(char str[], int l, int h)
{

//base cases
if(l>h) return INT_MAX;
if(l == h) return 0;
if(l==h-1) return (char str[], int l, int h)
{

//check if first and last character are same. On comparision result decide which subproblem to call
return(str[l] == str[h])? findMinInsertions(str, l+1, h_1): 
(min(findMinInsertions(str, l, h-1),
findMinInsertions(str, l+1, h)+1);
}

int main()
{
char str[] = "geeks";
cout<<findMinInsertions(str, 0, strlen(str)-1);
return 0;
}
